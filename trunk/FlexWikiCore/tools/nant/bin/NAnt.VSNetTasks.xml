<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NAnt.VSNetTasks</name>
    </assembly>
    <members>
        <member name="T:NAnt.VSNet.Tasks.SolutionTask">
            <summary>
            Compiles VS.NET solutions (or sets of projects), automatically determining project dependencies from inter-project references.
            </summary>
            <remarks>
            <para>
            This task will analyze each of the given .csproj or .vbproj files and
            build them in the proper order.  It supports reading solution files, as well
            as enterprise template projects.
            </para>
            <para>
            This task also supports the model of referencing projects by their
            output filenames, rather than referencing them inside the solution.  It will
            automatically detect the existance of a file reference and convert it to a 
            project reference.  For example, if project A references the file in the
            release output directory of project B, the solution task will automatically convert
            this to a project dependency on project B and will reference the appropriate configuration output
            directory at the final build time (ie: reference the debug version of B if the solution is built as debug).
            </para>
            </remarks>
            <example>
              <para>
              Compiles all of the projects in <c>test.sln</c>, in release mode, in 
              the proper order.
              </para>
              <code>
                <![CDATA[
            <solution configuration="release" solutionfile="test.sln" />
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles all of the projects in <c>projects.txt</c>, in the proper 
              order.
              </para>
              <code>
                <![CDATA[
            <solution configuration="release">
                <projects>
                    <includesList name="projects.txt" />
               </projects>
            </solution>
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles projects A, B and C, using the output of project X as a 
              reference.
              </para>
              <code>
                <![CDATA[
            <solution configuration="release">
                <projects>
                    <includes name="A\A.csproj" />
                    <includes name="B\b.vbproj" />
                    <includes name="C\c.csproj" />
                </projects>
                <referenceprojects>
                    <includes name="X\x.csproj" />
                </referenceprojects>
            </solution>
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles all of the projects in the solution except for project A.
              </para>
              <code>
                <![CDATA[
            <solution solutionfile="test.sln" configuration="release">
                <excludeprojects>
                    <includes name="A\A.csproj" />
                </excludeprojects>
            </solution>
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles all of the projects in the solution mapping the project at
              http://localhost/A/A.csproj to c:\inetpub\wwwroot\A\A.csproj.  This 
              allows the build to work without WebDAV.
              </para>
              <code>
                <![CDATA[
            <solution solutionfile="test.sln" configuration="release">
                <webmap>
                    <map url="http://localhost/A/A.csproj" path="c:\inetpub\wwwroot\A\A.csproj" />
                </webmap>
            </solution>
                ]]>
              </code>
            </example>
            <example>
              <para>
              Compiles all of the projects in the solution placing compiled outputs 
              in <c>c:\temp</c>.</para>
              <code>
                <![CDATA[
            <solution solutionfile="test.sln" configuration="release" outputdir="c:\temp" />
                ]]>
              </code>
            </example>
        </member>
        <member name="M:NAnt.VSNet.Tasks.SolutionTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Tasks.SolutionTask"/> class.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.Projects">
            <summary>
            The projects to build.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.ReferenceProjects">
            <summary>
            The projects to scan, but not build.
            </summary>
            <remarks>
            These projects are used to resolve project references and are 
            generally external to the solution being built. References to 
            these project's output files are converted to use the appropriate 
            solution configuration at build time.
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.SolutionFile">
            <summary>
            The name of the VS.NET solution file to build.
            </summary>
            <remarks>
            <para>
            The <see cref="P:NAnt.VSNet.Tasks.SolutionTask.Projects"/> can be used instead to supply a list 
            of Visual Studio.NET projects that should be built.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.Configuration">
            <summary>
            The name of the solution configuration to build.
            </summary>
            <remarks>
            <para>
            Generally <c>release</c> or <c>debug</c>.  Not case-sensitive.
            </para>
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.OutputDir">
            <summary>
            The directory where compiled targets will be placed.  This
            overrides path settings contained in the solution/project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.WebMaps">
            <summary>
            WebMap of URL's to project references.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.ExcludeProjects">
            <summary>
            Fileset of projects to exclude.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.AssemblyFolders">
            <summary>
            Set of folders where references are searched when not found in path 
            from project file (HintPath).
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.IncludeVSFolders">
            <summary>
            Includes Visual Studio search folders in reference search path.
            The default is <see langword="true" />.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Tasks.SolutionTask.DefaultAssemlyFolders">
            <summary>
            Set of folders where references are searched when not found in path 
            from project file (HintPath) or <see cref="P:NAnt.VSNet.Tasks.SolutionTask.AssemblyFolders"/>.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.Types.WebMap">
            <summary>
            Represents a single mapping from URL project path to physical project 
            path.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.Url">
            <summary>
            Specifies the URL of the project file.
            </summary>
            <value>
            The URL of the project file.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.Path">
            <summary>
            Specifies the actual path to the project file.
            </summary>
            <value>
            The actual path to the project file.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.IfDefined">
            <summary>
            Indicates if the URL of the project file should be mapped.
            </summary>
            <value>
            <see langword="true" /> if the URL of the project file should be 
            mapped; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMap.UnlessDefined">
            <summary>
            Indicates if the URL of the project file should not be mapped.
            </summary>
            <value>
            <see langword="true" /> if the URL of the project file should not 
            be mapped; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="T:NAnt.VSNet.Types.WebMapCollection">
            <summary>
            Contains a strongly typed collection of <see cref="T:NAnt.VSNet.Types.WebMap"/> 
            objects.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> class.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.#ctor(NAnt.VSNet.Types.WebMapCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> class
            with the specified <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> instance.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.#ctor(NAnt.VSNet.Types.WebMap[])">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> class
            with the specified array of <see cref="T:NAnt.VSNet.Types.WebMap"/> instances.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Add(NAnt.VSNet.Types.WebMap)">
            <summary>
            Adds a <see cref="T:NAnt.VSNet.Types.WebMap"/> to the end of the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> to be added to the end of the collection.</param> 
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.AddRange(NAnt.VSNet.Types.WebMap[])">
            <summary>
            Adds the elements of a <see cref="T:NAnt.VSNet.Types.WebMap"/> array to the end of the collection.
            </summary>
            <param name="items">The array of <see cref="T:NAnt.VSNet.Types.WebMap"/> elements to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.AddRange(NAnt.VSNet.Types.WebMapCollection)">
            <summary>
            Adds the elements of a <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> to the end of the collection.
            </summary>
            <param name="items">The <see cref="T:NAnt.VSNet.Types.WebMapCollection"/> to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Contains(NAnt.VSNet.Types.WebMap)">
            <summary>
            Determines whether a <see cref="T:NAnt.VSNet.Types.WebMap"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> to locate in the collection.</param> 
            <returns>
            <see langword="true"/> if <paramref name="item"/> is found in the 
            collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Contains(System.String)">
            <summary>
            Determines whether a <see cref="T:NAnt.VSNet.Types.WebMap"/> with the specified
            value is in the collection.
            </summary>
            <param name="value">The argument value to locate in the collection.</param> 
            <returns>
            <see langword="true"/> if a <see cref="T:NAnt.VSNet.Types.WebMap"/> with value 
            <paramref name="value"/> is found in the collection; otherwise, 
            <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.CopyTo(NAnt.VSNet.Types.WebMap[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.        
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param> 
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.IndexOf(NAnt.VSNet.Types.WebMap)">
            <summary>
            Retrieves the index of a specified <see cref="T:NAnt.VSNet.Types.WebMap"/> object in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> object for which the index is returned.</param> 
            <returns>
            The index of the specified <see cref="T:NAnt.VSNet.Types.WebMap"/>. If the <see cref="T:NAnt.VSNet.Types.WebMap"/> is not currently a member of the collection, it returns -1.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Insert(System.Int32,NAnt.VSNet.Types.WebMap)">
            <summary>
            Inserts a <see cref="T:NAnt.VSNet.Types.WebMap"/> into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> to insert.</param>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the collection.
            </summary>
            <returns>
            A <see cref="T:NAnt.VSNet.Types.WebMapEnumerator"/> for the entire collection.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapCollection.Remove(NAnt.VSNet.Types.WebMap)">
            <summary>
            Removes a member from the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.VSNet.Types.WebMap"/> to remove from the collection.</param>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMapCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMapCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NAnt.VSNet.Types.WebMap"/> with the specified value.
            </summary>
            <param name="value">The value of the <see cref="T:NAnt.VSNet.Types.WebMap"/> to get.</param>
        </member>
        <member name="T:NAnt.VSNet.Types.WebMapEnumerator">
            <summary>
            Enumerates the <see cref="T:NAnt.VSNet.Types.WebMap"/> elements of a <see cref="T:NAnt.VSNet.Types.WebMapCollection"/>.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapEnumerator.#ctor(NAnt.VSNet.Types.WebMapCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.Types.WebMapEnumerator"/> class
            with the specified <see cref="T:NAnt.VSNet.Types.WebMapCollection"/>.
            </summary>
            <param name="arguments">The collection that should be enumerated.</param>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            <see langword="true" /> if the enumerator was successfully advanced 
            to the next element; <see langword="false" /> if the enumerator has 
            passed the end of the collection.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Types.WebMapEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the 
            first element in the collection.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Types.WebMapEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.ConfigurationBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.ConfigurationBase"/> 
            class.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ConfigurationBase.OutputDir">
            <summary>
            Gets the output directory.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ConfigurationBase.OutputPath">
            <summary>
            Gets the path for the output file.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.ProjectBase">
            <summary>
            Base class for all project classes.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.ProjectBase.#ctor(NAnt.VSNet.Tasks.SolutionTask,System.CodeDom.Compiler.TempFileCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.ProjectBase"/> class.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectBase.Name">
            <summary>
            Gets the name of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectBase.ProjectPath">
            <summary>
            Gets the path of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectBase.Guid">
            <summary>
            Gets or sets the unique identifier of the VS.NET project.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Project.Log(NAnt.Core.Level,System.String)">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to be logged.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.Project.Log(NAnt.Core.Level,System.String,System.Object[])">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to log, containing zero or more format items.</param>
            <param name="args">An <see cref="T:System.Object"/> array containing zero or more objects to format.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.Project.Name">
            <summary>
            Gets the name of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Project.ProjectPath">
            <summary>
            Gets the path of the VS.NET project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.Project.Guid">
            <summary>
            Gets or sets the unique identifier of the VS.NET project.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.ProjectFactory">
            <summary>
            Factory class for VS.NET projects.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.ProjectFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.ProjectFactory"/>
            class.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.AssemblyOriginatorKeyFile">
            <summary>
            Gets the key file to use to sign ActiveX/COM wrappers.
            </summary>
            <value>
            The path of the key file to use to sign ActiveX/COM wrappers, 
            relative to the project root directory, or <see langword="null" />
            if the wrapper assembly should not be signed.
            </value>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.RunPostBuildEvent">
            <summary>
            Designates when the <see cref="P:NAnt.VSNet.ProjectSettings.PostBuildEvent"/> command line should
            be run. Possible values are "OnBuildSuccess", "Always" or 
            "OnOutputUpdated".
            </summary>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.PreBuildEvent">
            <summary>
            Contains commands to be run before a build takes place.
            </summary>
            <remarks>
            Valid commands are those in a .bat file. For more info see MSDN.
            </remarks>
        </member>
        <member name="P:NAnt.VSNet.ProjectSettings.PostBuildEvent">
            <summary>
            Contains commands to be ran after a build has taken place.
            </summary>
            <remarks>
            Valid commands are those in a .bat file. For more info see MSDN.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.Reference.ResolveFolder">
            <summary>
            Searches for the reference file.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.Reference.ResolveFolderFromList(System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            Searches for the given file in all paths in <paramref name="folderList" />.
            </summary>
            <param name="folderList">The folders to search.</param>
            <param name="fileName">The file to search for.</param>
            <returns>
            <see langword="true" /> if <paramref name="fileName" /> was found
            in <paramref name="folderList" />.
            </returns>
        </member>
        <member name="M:NAnt.VSNet.Solution.GetProjectFileFromGuid(System.String)">
            <summary>
            Gets the project file of the project with the given unique identifier.
            </summary>
            <param name="projectGuid">The unique identifier of the project for which the project file should be retrieves.</param>
            <returns>
            The project file of the project with the given unique identifier.
            </returns>
            <exception cref="T:NAnt.Core.BuildException">No project with unique identifier <paramref name="projectGuid"/> could be located.</exception>
        </member>
        <member name="M:NAnt.VSNet.Solution.Log(NAnt.Core.Level,System.String)">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to be logged.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.Solution.Log(NAnt.Core.Level,System.String,System.Object[])">
            <summary>
            Logs a message with the given priority.
            </summary>
            <param name="messageLevel">The message priority at which the specified message is to be logged.</param>
            <param name="message">The message to log, containing zero or more format items.</param>
            <param name="args">An <see cref="T:System.Object"/> array containing zero or more objects to format.</param>
            <remarks>
            The actual logging is delegated to the underlying task.
            </remarks>
        </member>
        <member name="M:NAnt.VSNet.Solution.LoadProjects">
            <summary>
            Loads the projects from the file system and stores them in an 
            instance variable.
            </summary>
            <exception cref="T:NAnt.Core.BuildException">A project GUID in the solution file does not match the actual GUID of the project in the project file.</exception>
        </member>
        <member name="T:NAnt.VSNet.VcArgumentMap">
            <summary>
            A mapping from properties in the .vcproj file to command line arguments.
            </summary>
        </member>
        <member name="M:NAnt.VSNet.VcArgumentMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.VSNet.VcArgumentMap"/>
            class.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.VcConfiguration">
            <summary>
            A single build configuration for a Visual C++ project or for a specific
            file in the project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.VcConfiguration.ManagedExtensions">
            <summary>
            Gets a value indicating whether Managed Extensions for C++ are 
            enabled.
            </summary>
        </member>
        <member name="T:NAnt.VSNet.VcProject">
            <summary>
            Visual C++ project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.VcProject.Name">
            <summary>
            Gets the name of the Visual C++ project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.VcProject.ProjectPath">
            <summary>
            Gets the path of the Visual C++ project.
            </summary>
        </member>
        <member name="P:NAnt.VSNet.VcProject.Guid">
            <summary>
            Gets or sets the unique identifier of the Visual C++ project.
            </summary>
        </member>
    </members>
</doc>
