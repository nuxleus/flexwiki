<project name="fwcontrib-common" default="test">
  
  <sysinfo />

  <xmlpeek file="version.xml" property="vermajor" xpath="/version/major" />
  <xmlpeek file="version.xml" property="verminor" xpath="/version/minor" />
  <xmlpeek file="version.xml" property="verbuild" xpath="/version/build" />
  <xmlpeek file="version.xml" property="verrevision" xpath="/version/revision" />
  
  <echo message="Building version ${vermajor}.${verminor}.${verbuild}.${verrevision}" />

  <ifnot test="${property::exists('configuration')}">
    <property name="configuration"
	      value="Debug" />
  </ifnot>

  <ifnot test="${property::exists('basedir')}">
    <property name="basedir" 
	      value="${nant.project.basedir}" />
  </ifnot>

  <ifnot test="${property::exists('targetdir')}">
    <property name="targetdir" 
	      value="${nant.project.basedir}/bin/${configuration}" />
  </ifnot>

  <ifnot test="${property::exists('distdir')}">
    <property name="distdir"
	      value="${nant.project.basedir}/dist" />
  </ifnot>

  <ifnot test="${property::exists('diffdir')}">
    <property name="diffdir" value="diff" />
  </ifnot>

  <ifnot test="${property::exists('release.dir')}">
    <property name="release.dir" value="${path::combine(basedir, 'release')}" />
  </ifnot>

  <ifnot test="${property::exists('build.skip')}">
    <property name="build.skip" value="false" />
  </ifnot>

  <ifnot test="${property::exists('test.skip')}">
    <property name="test.skip" value="false" />
  </ifnot>

  <ifnot test="${property::exists('dist.skip')}">
    <property name="dist.skip" value="false" />
  </ifnot>

  <ifnot test="${property::exists('upload.skip')}">
    <property name="upload.skip" value="false" />
  </ifnot>

  <ifnot test="${property::exists('cvs.root')}">
    <property name="cvs.root" value=":ext:candera@SourceForgeCVS:/cvsroot/fwcontrib" />
  </ifnot>

  <target name="init">
    <mkdir dir="${targetdir}" />

    <asminfo output="AssemblyAttributes.cs" language="CSharp">
      <imports>
        <import namespace="System" />
        <import namespace="System.Reflection" />
      </imports>
      <attributes>
        <attribute type="AssemblyVersionAttribute"
            value="${vermajor}.${verminor}.${verbuild}.${verrevision}"
		     />
      </attributes>
    </asminfo>
  </target>

  <target name="build" depends="init" unless="${build.skip}">
    <solution configuration="${configuration}" 
	      outputdir="${targetdir}"
	      solutionfile="${nant.project.name}.sln">
    </solution>
    <!-- We need to do copy the help dir in the script, since the
	 solution task isn't smart enough to run post build steps -->
    <property name="todir" value="${targetdir}\Help" />
    <call target="copyhelpdir" />
  </target>

  <target name="test" depends="build" unless="${test.skip}">
    <nunit2>
      <formatter type="Plain" />
      <test assemblyname="${targetdir}/${nant.project.name}.exe" />
    </nunit2>
  </target>

  <target name="dist" depends="test" unless="${dist.skip}">
    <mkdir dir="${distdir}" />

    <property name="stagingdir" value="${distdir}\staging" />
    <delete dir="${stagingdir}" if="${directory::exists(stagingdir)}" />
    <mkdir dir="${stagingdir}" />

    <property name="todir" value="${stagingdir}\Help" />
    <call target="copyhelpdir" />

    <copy todir="${stagingdir}">
      <fileset refid="dist.binfiles" />
    </copy>

    <property name="dist.binzip" 
	      value="${distdir}/${nant.project.name}-${vermajor}.${verminor}.${verbuild}.${verrevision}-${configuration}.zip" />
    <property name="dist.srczip" 
	      value="${distdir}/${nant.project.name}-${vermajor}.${verminor}.${verbuild}.${verrevision}-src.zip" />
    <zip zipfile="${dist.binzip}">
      <fileset basedir="${stagingdir}">
        <include name="**\*" />
      </fileset>
    </zip>
    <zip zipfile="${dist.srczip}">
      <fileset refid="dist.sources" />
    </zip>
  </target>

  <target name="upload" depends="dist" unless="${upload.skip}">
    <echo message="Uploading ${dist.binzip} and ${dist.srczip} to SourceForge" />
    <exec program="ncftpput" workingdir="${distdir}">
      <arg value="-p" />
      <arg value="candera@sourceforge.net" />
      <arg value="upload.sourceforge.net" />
      <arg value="incoming" />
      <arg value="${dist.binzip}" />
      <arg value="${dist.srczip}" />
    </exec>
  </target>

  <target name="clean">
    <delete dir="${targetdir}" if="${directory::exists(targetdir)}" />
    <delete dir="${distdir}" if="${directory::exists(distdir)}"/>
    <delete dir="${diffdir}" if="${directory::exists(diffdir)}"/>
    <delete dir="${release.dir}" if="${directory::exists(release.dir)}"/>
  </target>

  <target name="release">
    <delete dir="${release.dir}" if="${directory::exists(release.dir)}" />
    <mkdir dir="${release.dir}" />

    <exec program="cvs.exe">
      <arg value="-d" />
      <arg value="${cvs.root}" />
      <arg value="co" />
      <arg value="-R" />
      <arg value="-d" />
      <arg value="${release.dir}" />
      <arg value="${nant.project.name}" />
    </exec>

<!-- For some reason this stopped working. Had to go with the exec
      instead. Weird.     
    <nant buildfile="${release.dir}/${nant.project.name}.build"
	  inheritall="false"
	  target="upload">
      <properties>                              
	<property name="configuration" value="${useconfig}" />
      </properties>
    </nant>
-->

    <exec program="nant.exe">
      <arg
	value="-buildfile:${release.dir}/${nant.project.name}.build"
      />
      <arg value="-D:configuration=${configuration}" />
      <arg value="upload" />
    </exec>

    <exec program="cvs.exe" workingdir="${release.dir}">
      <arg value="-d" />
      <arg value="${cvs.root}" />
      <arg value="tag" />
      <arg value="-R" />
      <arg value="Build-${vermajor}-${verminor}-${verbuild}-${verrevision}-${configuration}" />
    </exec>

  </target>

  <target name="diff">
    <delete dir="${diffdir}" failonerror="false" />
    <mkdir dir="${diffdir}" />

    <exec program="cvs.exe">
      <arg value="-d" />
      <arg value="${cvs.root}" />
      <arg value="co" />
      <arg value="-R" />
      <arg value="-d" />
      <arg value="${diffdir}" />
      <arg value="${nant.project.name}" />
    </exec>

    <exec program="winmerge.exe">
      <arg value="-r" />
      <arg value="${diffdir}" />
      <arg value="${basedir}" />
    </exec>
	  
  </target>

  <target name="copyhelpdir">
    <property name="helpdir" value="${basedir}\Help" />
    <if test="${directory::exists(helpdir)}">
      <delete dir="${todir}" if="${directory::exists(todir)}" />
      <mkdir dir="${todir}" />
      <copy todir="${todir}">
        <fileset basedir="${helpdir}">
          <include name="**\*" />
        </fileset>
      </copy>
    </if>
  </target>

</project>
